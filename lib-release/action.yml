name: Nodejs Release
description: 'Checks if a new release is available for a Nodejs package'
inputs:
  version:
    description: 'The version of the package'
  github-token:
    description: 'The GitHub token to use for authentication'
    required: true
  force-add:
    description: 'Force files or directories to be added to the release'
    default: ''
outputs:
  changed:
    description: 'true if changes are detected, false otherwise'
runs:
  using: "composite"
  steps:
      - name: Get App Version
        id: get_version
        shell: bash
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          elif [ -f package.json ]; then
            echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          elif [ -f Cargo.toml ]; then
            echo "version=$(grep -m1 -oP '(?<=version = \")[^\"]*' Cargo.toml)" >> $GITHUB_OUTPUT
          elif [ -f setup.py ]; then
            echo "version=$(grep -m1 -oP '(?<=version=\")[^\"]*' setup.py)" >> $GITHUB_OUTPUT
          elif [ -f version.txt ]; then
            echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT
          elif [ -f VERSION.txt ]; then
            echo "version=$(cat VERSION.txt)" >> $GITHUB_OUTPUT
          elif [ -f VERSION.md ]; then
            echo "version=$(cat VERSION.md)" >> $GITHUB_OUTPUT
          fi

      - name: Check tag exists
        shell: bash
        id: tag_exists
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            if [ -n "$(git tag -l v${{ inputs.version }})" ]; then
              echo "tag_exists=true" >> $GITHUB_OUTPUT
            else
              echo "tag_exists=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi


      - name: Commit Changes to Main Branch
        if: steps.tag_exists.outputs.tag_exists == 'false'
        shell: bash
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git remote set-url origin https://x-access-token:${{ inputs.github-token }}@github.com/${{ github.repository }}
          git checkout -b v${{ steps.get_version.outputs.version }}
          git add .

          if [ -n "${{ inputs.force-add }}" ]; then
            git add -f ${{ inputs.force-add }}
          fi

          if git status --porcelain | grep -q .; then
            git commit -m "Release ${{ steps.get_version.outputs.version }}"
          fi

          git tag ${{ steps.get_version.outputs.version }}
          git push origin main --tags

      - name: Create Release
        if: steps.tag_exists.outputs.tag_exists == 'false'
        shell: bash
        run: |
          gh release create ${{ steps.get_version.outputs.version }} --title "Release ${{ steps.get_version.outputs.version }}" --notes "Release ${{ steps.get_version.outputs.version }}" --repo ${{ github.repository }} --target main